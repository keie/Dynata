@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    
</div>

<div style="display:flex">
    <div id="sideBar">
        <div id="folders">
        </div>  
    </div>
    <div id="otherSideBar">
        <div>
            <div class="divIcon tooltipx"   >
                <img src='https://cdn-icons-png.flaticon.com/512/892/892311.png' height=40 width=40/>
                <span class="tooltiptext">Upload folder/files</span>
            </div>
        </div>
        <div>
            <div class="divIcon tooltipx"  onclick="openForm()">
                <img src='https://cdn-icons.flaticon.com/png/512/4315/premium/4315609.png?token=exp=1656191132~hmac=2cfa1d643fadb8e030eb437062238937' height=40 width=40/>
                <span class="tooltiptext">Add folder</span>
            </div>
        </div>
        <div>
            <div class="divIcon tooltipx">
                <img src='https://cdn-icons-png.flaticon.com/512/1828/1828249.png' height=40 width=40/>
                <span class="tooltiptext">Copy it</span>
            </div>
        </div>
        <div>
            <div class="divIcon tooltipx"> 
                <img src='https://cdn-icons.flaticon.com/png/512/484/premium/484611.png?token=exp=1656191241~hmac=db91ff7ad61cfdb3e55024a71aa6bb53' height=40 width=40/>
                <span class="tooltiptext">Delete it</span>
            </div>
        </div>
        

    </div>
</div>




<div class="form-popup" id="myForm">
  <div  class="form-container">
    <div style="display:flex">
        <h1>Folder Creation</h1>
        <button type="button" class="btnClose" onclick="closeForm()" style="width:2vw">X</button>
    </div>
      
    <div >
      <p>Please select the folder Type:</p>
      <input type="radio" id="mainFolder" name="fav_language" value="Main Folder" checked="checked" onchange="radioChange('Main Folder')">
      <label for="mainFolder">Main Folder</label><br>
      <input type="radio" id="subFolder" name="fav_language" value="Sub Folder" onchange="radioChange('Sub Folder')">
      <label for="subFolder">Sub Folder</label><br>
      
      
  <br><br>


      <br>  
    </div>
    <label for="folders"><b>Folders</b></label>
    <select name="subFolders" id="dropDownFolders" disabled="true" >
        <option value="No" selected="selected">No apply</option>
      </select><br />
    <label for="newFolder"><b>Folder Name</b></label>
    <input type="text" placeholder="Enter Folder Name" id="txtName" name="newFolder" required>
    <button  class="btn" onclick="createFolder()">Create</button>
    
  </div>
</div>




<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>

    


    function openForm() {
        document.getElementById("myForm").style.display = "block";
    }

    function closeForm() {
        document.getElementById("myForm").style.display = "none";
    }
    
    LoadData()
    var strNode=`<div id=valueId onclick="collapseAction(this.id,event)" class="node"><div class='attributes'>  <div><img src='https://cdn-icons.flaticon.com/png/512/4315/premium/4315609.png?token=exp=1655948169~hmac=28d279f4c41d457fc57419801183ddd6' width='15' height='15'/></div><div style='padding-left:0.5vw'><img src='https://cdn-icons-png.flaticon.com/512/716/716784.png' width='20' height='20'/></div><div><p style='padding-left:0.5vw'>valueFolderName</p></div>  </div><div id='valueId_subfolders' class='subfolders' style="display:none"></div></div>`
    var link="-"
    function GetChild(arr,dadId,idFather){
         
        arr.forEach(function callback(currentValue1, index, array) {
            var child= strNode.replace('valueId',`folder_${currentValue1.id}`).replace('valueFolderName',currentValue1.folderName).replace('valueId_subfolders',`${currentValue1.id}_subfolders`)
            
            if(currentValue1.folderId==idFather){
                $( "#dropDownFolders" ).append(`<option value=${currentValue1.id}>${link}${currentValue1.folderName}</option>`)
                $(`#${dadId} #${idFather}_subfolders`).append(child)
                
            }
            if(currentValue1.subFolders.length>0){
                link+="-"
                GetChild(currentValue1.subFolders,`folder_${currentValue1.id}`,currentValue1.id)
                link=link.slice(0, -1)
             }
            
        })
    }

    function GetDads(arr){
         arr.forEach(function callback(currentValue1, index, array) {
            var node= strNode.replace('valueId',`folder_${currentValue1.id}`).replace('valueFolderName',currentValue1.folderName).replace('valueId_subfolders',`${currentValue1.id}_subfolders`)
            $( "#folders" ).append(node)
            $( "#dropDownFolders" ).append(`<option value=${currentValue1.id}>${currentValue1.folderName}</option>`)
            if(currentValue1.subFolders?.length>0){
                GetChild(currentValue1.subFolders,`folder_${currentValue1.id}`,currentValue1.id)
            }
         })
    }



    function LoadData() {
        var obj = new Object();
        obj.IncludeFiles=true;
        obj.JustHierarchy=true;
        var jsonString= JSON.stringify(obj);
        console.log(jsonString)
        $.ajax({
            type: "GET",                                              
            url: 'https://localhost:44384/folder?IncludeFiles=true&JustHierarchy=true',                    
            contentType: "application/json; charset=utf-8",            
            async: true,                                               
            success: function (result) {           
                $("#folders").html("")
                $( "#dropDownFolders" ).html(`<option value="No" selected="selected">No apply</option>`)
                GetDads(result.data);
                        
             },
           error: function (XMLHttpRequest, textStatus, errorThrown) { 
            var error = eval("(" + XMLHttpRequest.responseText + ")");
                        alert(error.Message);
                    }
                });
      }


    var hcolor='#a9cbeb'
    var selectColor='#D0D1CE'
    
    function collapseAction(id,e){
        
        e.stopPropagation();
        var getId=id.split('_')[1]
        
        $(`.node`).css('background-color', hcolor);
        $(`#${id}`).css('background-color', selectColor);
        var n=$(`#${id} #${getId}_subfolders`)
        
        $(n).css('background-color', hcolor);
        if($(n).css('display')=='none'){
            console.log($(n).css('display'))
            $(n).show()
            return false;
        }
       else if($(n).css('display')=='block'){
           $(n).hide()
           return false;
       }

     return false;
    }


    function createFolder(){
        var folderId=$( "#dropDownFolders option:selected").val();
        alert(folderId)
        var obj = new Object();
        obj.FolderName=$("#txtName").val()
        obj.FolderId=folderId!="No"?folderId:null
        obj.isSubFolder=folderId!="No"?true:false
        var jsonString= JSON.stringify(obj);
        $.ajax({
            type: "POST",                                              
            url: 'https://localhost:44384/folder',                    
            contentType: "application/json; charset=utf-8",           
            data:jsonString,
            async: true,                                               
            success: function (result) {                            
                alert("Folder created sucessfully")
                $("#txtName").val("");
                LoadData()
                        
             },
           error: function (XMLHttpRequest, textStatus, errorThrown) { 
            var error = eval("(" + XMLHttpRequest.responseText + ")");
                        alert(error.Message);
                    }
                });
        
    }


    function radioChange(value) {
        
        if (value == 'Main Folder') {
            $("#dropDownFolders").prop("disabled",true)
            $("#dropDownFolders").val("No");
        }
        else if (value == 'Sub Folder') {
           $("#dropDownFolders").prop("disabled",false)
        }
    }



</script>



<style>

    .btnClose{
        width: 2vw;
        height: 3vw;
        color: red;
        font-weight: bold;
        background-color: transparent;
        font-size: 1.5rem;
        margin-left: 10vw;
        border:none;
    }


    .tooltipx {
      position: relative;
      display: inline-block;
      border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
    }

    /* Tooltip text */
    .tooltipx .tooltiptext {
      visibility: hidden;
      width: 120px;
      background-color: black;
      color: #fff;
      text-align: center;
      padding: 5px 0;
      border-radius: 6px;
 
      /* Position the tooltip text - see examples below! */
      position: absolute;
      z-index: 1;
    }

    .tooltipx:hover .tooltiptext {
        visibility: visible;
    }

    #otherSideBar{
        background-color:#D6D7D2;
        width:5%!important;
        height:60vh;
        display:block;
    }

    .divIcon{
        padding:10px;
    }

   

    #sideBar{
        background-color:#a9cbeb;
        width:80%!important;
        height:60vh;
     
    }

    #folders{
        padding-top:5vh;
        display:block;
        width: 40%;
    }

    .container{
        margin-left:0px!important;
        padding-left:0px!important;
    }
    .attributes>div{
        display: inline-flex;
        color:#ffffff;
        font-weight:bold;
    }

    .subfolders{
        padding-left:5vw;
    }


    .open-button {
  background-color: #555;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  opacity: 0.8;
  position: fixed;
  bottom: 23px;
  right: 28px;
  width: 280px;
}

/* The popup form - hidden by default */
.form-popup {
  display: none;
  position: fixed;
  bottom: 0;
  right: 15px;
  border: 3px solid #f1f1f1;
  z-index: 9;


  
    top: 30%;
    left: 50%;
    margin-top: -50px;
    margin-left: -50px;
      width: 30vw;
    height: 10vh;
}

/* Add styles to the form container */
.form-container {
  max-width: 30vw;
  padding: 10px;
  background-color: white;
}

/* Full-width input fields */
.form-container input[type=text], .form-container input[type=password] {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: #f1f1f1;
}

/* When the inputs get focus, do something */
.form-container input[type=text]:focus, .form-container input[type=password]:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/login button */
.form-container .btn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover, .open-button:hover {
  opacity: 1;
}

</style>